////////////
// README //
////////////

// This build script assumes the following directory structure:
// - somewhere/your/code/directory/is
// -- commcare-odk (github: https://github.com/dimagi/commcare-odk/)
// -- commcare (github: https://github.com/dimagi/commcare/)
// -- javarosa (github: https://github.com/dimagi/javarosa/)
// these directories MUST be named like this, or it won't work

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.2.3'
    }
}

apply plugin: 'com.android.application'

// this packs the .so files into native-libs.jar in the build directory...
task nativeLibsToJar(type: Zip, description: 'create a jar archive of the native libs') {
    destinationDir file("$buildDir/native-libs")
    baseName 'native-libs'
    extension 'jar'
    from fileTree(dir: 'app/libs', include: '**/*.so')
    into 'lib/'
}

tasks.withType(JavaCompile) {
    compileTask -> compileTask.dependsOn(nativeLibsToJar)
}

// we need mavenCentral to fetch eventual dependencies, such as GridViewWithHeaderAndFooter
repositories {
  mavenCentral()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.+'

    compileDebug project(':libraries:mapballoons')
    compileDebug fileTree(dir: 'libs', include: '*.jar')
    compileDebug fileTree(dir: 'app/libs', include: '*.jar')
    compileDebug 'in.srain.cube:grid-view-with-header-footer:1.0.12'
    // this includes the .so files from native-libs.jar
    compileDebug fileTree(dir: "$buildDir/native-libs", include: 'native-libs.jar')
    compileDebug 'com.android.support:support-v4:22.1.1'

    compileDebug project(':javarosa')
    compileDebug project(':commcare')


    compileRelease project(':libraries:mapballoons')
    compileRelease fileTree(dir: 'libs', include: '*.jar')
    compileRelease fileTree(dir: 'app/libs', include: '*.jar')
    compileRelease 'in.srain.cube:grid-view-with-header-footer:1.0.12'
    // this includes the .so files from native-libs.jar
    compileRelease fileTree(dir: "$buildDir/native-libs", include: 'native-libs.jar')
    compileRelease 'com.android.support:support-v4:22.1.1'
}

project.ext {
    compileSdkVersion = "Google Inc.:Google APIs:22"
    buildToolsVersion = "22.0.1"
}

project(':libraries:mapballoons') {
  android{
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
  }
}

project(':javarosa') {
  android{
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
  }
}

project(':commcare') {
  android{
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
  }
}


android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    lintOptions {
      abortOnError false
    }

    packagingOptions {
	    exclude 'META-INF/LICENSE'
	    exclude 'META-INF/LICENSE.txt'
      exclude 'META-INF/DEPENDENCIES'
      exclude 'META-INF/NOTICE'
      exclude 'META-INF/NOTICE.txt'
	  }

    dexOptions {
      preDexLibraries = true
    }

    defaultConfig {
        minSdkVersion 9
        targetSdkVersion 22
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    def sourceLocations = ['app/src'
                           // , '../javarosa/core/src'
                           , 'libraries/achartengine/achartengine/src'
                          ]

    sourceSets {
      main {
        manifest.srcFile 'app/AndroidManifest.xml'
        java.srcDirs = sourceLocations
        resources.srcDirs = ['app/src']
        aidl.srcDirs = ['app/src']
        renderscript.srcDirs = ['app/src']
        res.srcDirs = ['app/res']
        assets.srcDirs = ['app/assets']
        buildTypes {
          debug {
            debuggable true
            java.srcDirs = sourceLocations + ['debug']
            // applicationIdSuffix ".debug"

            dependencies {
              debugCompile 'com.facebook.stetho:stetho:1.1.1'
            }
          }
          release {
            java.srcDirs = sourceLocations + ['release']
          }
        }
      }

      // Move the tests to tests/java, tests/res, etc...
      instrumentTest.setRoot('tests')

      // Move the build types to build-types/<type>
      // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
      // This moves them out of them default location under src/<type>/... which would
      // conflict with src/ being used by the main source set.
      // Adding new build types or product flavors should be accompanied
      // by a similar customization.
      debug.setRoot('build-types/debug')
      release.setRoot('build-types/release')
    }
}
